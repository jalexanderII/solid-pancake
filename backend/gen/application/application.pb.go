// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: application/application.proto

package application

import (
	context "context"
	common "github.com/jalexanderII/solid-pancake/gen/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserRef         int32         `protobuf:"varint,3,opt,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty"`
	SocialSecurity  string        `protobuf:"bytes,4,opt,name=social_security,json=socialSecurity,proto3" json:"social_security,omitempty"`
	DateOfBirth     string        `protobuf:"bytes,5,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	DriversLicense  string        `protobuf:"bytes,6,opt,name=drivers_license,json=driversLicense,proto3" json:"drivers_license,omitempty"`
	PreviousAddress *common.Place `protobuf:"bytes,7,opt,name=previous_address,json=previousAddress,proto3" json:"previous_address,omitempty"`
	Landlord        string        `protobuf:"bytes,8,opt,name=landlord,proto3" json:"landlord,omitempty"`
	LandlordNumber  string        `protobuf:"bytes,9,opt,name=landlord_number,json=landlordNumber,proto3" json:"landlord_number,omitempty"`
	Employer        string        `protobuf:"bytes,10,opt,name=employer,proto3" json:"employer,omitempty"`
	Salary          int32         `protobuf:"varint,11,opt,name=salary,proto3" json:"salary,omitempty"`
	ApartmentRef    int32         `protobuf:"varint,12,opt,name=apartment_ref,json=apartmentRef,proto3" json:"apartment_ref,omitempty"`
}

func (x *ApplicationReq) Reset() {
	*x = ApplicationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_application_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationReq) ProtoMessage() {}

func (x *ApplicationReq) ProtoReflect() protoreflect.Message {
	mi := &file_application_application_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationReq.ProtoReflect.Descriptor instead.
func (*ApplicationReq) Descriptor() ([]byte, []int) {
	return file_application_application_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApplicationReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationReq) GetUserRef() int32 {
	if x != nil {
		return x.UserRef
	}
	return 0
}

func (x *ApplicationReq) GetSocialSecurity() string {
	if x != nil {
		return x.SocialSecurity
	}
	return ""
}

func (x *ApplicationReq) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *ApplicationReq) GetDriversLicense() string {
	if x != nil {
		return x.DriversLicense
	}
	return ""
}

func (x *ApplicationReq) GetPreviousAddress() *common.Place {
	if x != nil {
		return x.PreviousAddress
	}
	return nil
}

func (x *ApplicationReq) GetLandlord() string {
	if x != nil {
		return x.Landlord
	}
	return ""
}

func (x *ApplicationReq) GetLandlordNumber() string {
	if x != nil {
		return x.LandlordNumber
	}
	return ""
}

func (x *ApplicationReq) GetEmployer() string {
	if x != nil {
		return x.Employer
	}
	return ""
}

func (x *ApplicationReq) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *ApplicationReq) GetApartmentRef() int32 {
	if x != nil {
		return x.ApartmentRef
	}
	return 0
}

type ApplicationRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReferenceId    *common.UUID `protobuf:"bytes,2,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	Status         string       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Attachments    []string     `protobuf:"bytes,4,rep,name=attachments,proto3" json:"attachments,omitempty"`
	ApplicationRef int32        `protobuf:"varint,5,opt,name=application_ref,json=applicationRef,proto3" json:"application_ref,omitempty"`
}

func (x *ApplicationRes) Reset() {
	*x = ApplicationRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_application_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationRes) ProtoMessage() {}

func (x *ApplicationRes) ProtoReflect() protoreflect.Message {
	mi := &file_application_application_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationRes.ProtoReflect.Descriptor instead.
func (*ApplicationRes) Descriptor() ([]byte, []int) {
	return file_application_application_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationRes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApplicationRes) GetReferenceId() *common.UUID {
	if x != nil {
		return x.ReferenceId
	}
	return nil
}

func (x *ApplicationRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApplicationRes) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *ApplicationRes) GetApplicationRef() int32 {
	if x != nil {
		return x.ApplicationRef
	}
	return 0
}

type ListApplicationReqOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationRequests []*ApplicationReq `protobuf:"bytes,1,rep,name=application_requests,json=applicationRequests,proto3" json:"application_requests,omitempty"`
}

func (x *ListApplicationReqOut) Reset() {
	*x = ListApplicationReqOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_application_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationReqOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationReqOut) ProtoMessage() {}

func (x *ListApplicationReqOut) ProtoReflect() protoreflect.Message {
	mi := &file_application_application_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationReqOut.ProtoReflect.Descriptor instead.
func (*ListApplicationReqOut) Descriptor() ([]byte, []int) {
	return file_application_application_proto_rawDescGZIP(), []int{2}
}

func (x *ListApplicationReqOut) GetApplicationRequests() []*ApplicationReq {
	if x != nil {
		return x.ApplicationRequests
	}
	return nil
}

type ListApplicationResOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationResponses []*ApplicationRes `protobuf:"bytes,1,rep,name=application_responses,json=applicationResponses,proto3" json:"application_responses,omitempty"`
}

func (x *ListApplicationResOut) Reset() {
	*x = ListApplicationResOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_application_application_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListApplicationResOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationResOut) ProtoMessage() {}

func (x *ListApplicationResOut) ProtoReflect() protoreflect.Message {
	mi := &file_application_application_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationResOut.ProtoReflect.Descriptor instead.
func (*ListApplicationResOut) Descriptor() ([]byte, []int) {
	return file_application_application_proto_rawDescGZIP(), []int{3}
}

func (x *ListApplicationResOut) GetApplicationResponses() []*ApplicationRes {
	if x != nil {
		return x.ApplicationResponses
	}
	return nil
}

var File_application_application_proto protoreflect.FileDescriptor

var file_application_application_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x03, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x62, 0x69, 0x72, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x42, 0x69, 0x72,
	0x74, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x73, 0x5f, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x10, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x6c,
	0x6f, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x22, 0x5b, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x4f, 0x75,
	0x74, 0x12, 0x42, 0x0a, 0x14, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x52, 0x13, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x5d, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x44,
	0x0a, 0x15, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x52, 0x14,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x32, 0xd6, 0x03, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x0f, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0f,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x4f, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x17,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x09, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x42, 0x37, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x61, 0x6c, 0x65,
	0x78, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x49, 0x2f, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x2d, 0x70,
	0x61, 0x6e, 0x63, 0x61, 0x6b, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_application_application_proto_rawDescOnce sync.Once
	file_application_application_proto_rawDescData = file_application_application_proto_rawDesc
)

func file_application_application_proto_rawDescGZIP() []byte {
	file_application_application_proto_rawDescOnce.Do(func() {
		file_application_application_proto_rawDescData = protoimpl.X.CompressGZIP(file_application_application_proto_rawDescData)
	})
	return file_application_application_proto_rawDescData
}

var file_application_application_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_application_application_proto_goTypes = []interface{}{
	(*ApplicationReq)(nil),        // 0: ApplicationReq
	(*ApplicationRes)(nil),        // 1: ApplicationRes
	(*ListApplicationReqOut)(nil), // 2: ListApplicationReqOut
	(*ListApplicationResOut)(nil), // 3: ListApplicationResOut
	(*common.Place)(nil),          // 4: types.Place
	(*common.UUID)(nil),           // 5: types.UUID
	(*common.ID)(nil),             // 6: types.ID
	(*common.Empty)(nil),          // 7: types.Empty
}
var file_application_application_proto_depIdxs = []int32{
	4,  // 0: ApplicationReq.previous_address:type_name -> types.Place
	5,  // 1: ApplicationRes.reference_id:type_name -> types.UUID
	0,  // 2: ListApplicationReqOut.application_requests:type_name -> ApplicationReq
	1,  // 3: ListApplicationResOut.application_responses:type_name -> ApplicationRes
	0,  // 4: Application.Apply:input_type -> ApplicationReq
	6,  // 5: Application.ReadApplicationRequest:input_type -> types.ID
	0,  // 6: Application.UpdateApplicationRequest:input_type -> ApplicationReq
	6,  // 7: Application.DeleteApplicationRequest:input_type -> types.ID
	7,  // 8: Application.ListApplicationRequests:input_type -> types.Empty
	6,  // 9: Application.ReadApplicationResponse:input_type -> types.ID
	6,  // 10: Application.DeleteApplicationResponse:input_type -> types.ID
	7,  // 11: Application.ListApplicationResponse:input_type -> types.Empty
	1,  // 12: Application.Apply:output_type -> ApplicationRes
	0,  // 13: Application.ReadApplicationRequest:output_type -> ApplicationReq
	0,  // 14: Application.UpdateApplicationRequest:output_type -> ApplicationReq
	0,  // 15: Application.DeleteApplicationRequest:output_type -> ApplicationReq
	2,  // 16: Application.ListApplicationRequests:output_type -> ListApplicationReqOut
	1,  // 17: Application.ReadApplicationResponse:output_type -> ApplicationRes
	1,  // 18: Application.DeleteApplicationResponse:output_type -> ApplicationRes
	3,  // 19: Application.ListApplicationResponse:output_type -> ListApplicationResOut
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_application_application_proto_init() }
func file_application_application_proto_init() {
	if File_application_application_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_application_application_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_application_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_application_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationReqOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_application_application_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListApplicationResOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_application_application_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_application_application_proto_goTypes,
		DependencyIndexes: file_application_application_proto_depIdxs,
		MessageInfos:      file_application_application_proto_msgTypes,
	}.Build()
	File_application_application_proto = out.File
	file_application_application_proto_rawDesc = nil
	file_application_application_proto_goTypes = nil
	file_application_application_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ApplicationClient is the client API for Application service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApplicationClient interface {
	Apply(ctx context.Context, in *ApplicationReq, opts ...grpc.CallOption) (*ApplicationRes, error)
	ReadApplicationRequest(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationReq, error)
	UpdateApplicationRequest(ctx context.Context, in *ApplicationReq, opts ...grpc.CallOption) (*ApplicationReq, error)
	DeleteApplicationRequest(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationReq, error)
	ListApplicationRequests(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*ListApplicationReqOut, error)
	ReadApplicationResponse(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationRes, error)
	DeleteApplicationResponse(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationRes, error)
	ListApplicationResponse(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*ListApplicationResOut, error)
}

type applicationClient struct {
	cc grpc.ClientConnInterface
}

func NewApplicationClient(cc grpc.ClientConnInterface) ApplicationClient {
	return &applicationClient{cc}
}

func (c *applicationClient) Apply(ctx context.Context, in *ApplicationReq, opts ...grpc.CallOption) (*ApplicationRes, error) {
	out := new(ApplicationRes)
	err := c.cc.Invoke(ctx, "/Application/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) ReadApplicationRequest(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationReq, error) {
	out := new(ApplicationReq)
	err := c.cc.Invoke(ctx, "/Application/ReadApplicationRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) UpdateApplicationRequest(ctx context.Context, in *ApplicationReq, opts ...grpc.CallOption) (*ApplicationReq, error) {
	out := new(ApplicationReq)
	err := c.cc.Invoke(ctx, "/Application/UpdateApplicationRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) DeleteApplicationRequest(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationReq, error) {
	out := new(ApplicationReq)
	err := c.cc.Invoke(ctx, "/Application/DeleteApplicationRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) ListApplicationRequests(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*ListApplicationReqOut, error) {
	out := new(ListApplicationReqOut)
	err := c.cc.Invoke(ctx, "/Application/ListApplicationRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) ReadApplicationResponse(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationRes, error) {
	out := new(ApplicationRes)
	err := c.cc.Invoke(ctx, "/Application/ReadApplicationResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) DeleteApplicationResponse(ctx context.Context, in *common.ID, opts ...grpc.CallOption) (*ApplicationRes, error) {
	out := new(ApplicationRes)
	err := c.cc.Invoke(ctx, "/Application/DeleteApplicationResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationClient) ListApplicationResponse(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (*ListApplicationResOut, error) {
	out := new(ListApplicationResOut)
	err := c.cc.Invoke(ctx, "/Application/ListApplicationResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApplicationServer is the server API for Application service.
type ApplicationServer interface {
	Apply(context.Context, *ApplicationReq) (*ApplicationRes, error)
	ReadApplicationRequest(context.Context, *common.ID) (*ApplicationReq, error)
	UpdateApplicationRequest(context.Context, *ApplicationReq) (*ApplicationReq, error)
	DeleteApplicationRequest(context.Context, *common.ID) (*ApplicationReq, error)
	ListApplicationRequests(context.Context, *common.Empty) (*ListApplicationReqOut, error)
	ReadApplicationResponse(context.Context, *common.ID) (*ApplicationRes, error)
	DeleteApplicationResponse(context.Context, *common.ID) (*ApplicationRes, error)
	ListApplicationResponse(context.Context, *common.Empty) (*ListApplicationResOut, error)
}

// UnimplementedApplicationServer can be embedded to have forward compatible implementations.
type UnimplementedApplicationServer struct {
}

func (*UnimplementedApplicationServer) Apply(context.Context, *ApplicationReq) (*ApplicationRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}
func (*UnimplementedApplicationServer) ReadApplicationRequest(context.Context, *common.ID) (*ApplicationReq, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadApplicationRequest not implemented")
}
func (*UnimplementedApplicationServer) UpdateApplicationRequest(context.Context, *ApplicationReq) (*ApplicationReq, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateApplicationRequest not implemented")
}
func (*UnimplementedApplicationServer) DeleteApplicationRequest(context.Context, *common.ID) (*ApplicationReq, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteApplicationRequest not implemented")
}
func (*UnimplementedApplicationServer) ListApplicationRequests(context.Context, *common.Empty) (*ListApplicationReqOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListApplicationRequests not implemented")
}
func (*UnimplementedApplicationServer) ReadApplicationResponse(context.Context, *common.ID) (*ApplicationRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadApplicationResponse not implemented")
}
func (*UnimplementedApplicationServer) DeleteApplicationResponse(context.Context, *common.ID) (*ApplicationRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteApplicationResponse not implemented")
}
func (*UnimplementedApplicationServer) ListApplicationResponse(context.Context, *common.Empty) (*ListApplicationResOut, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListApplicationResponse not implemented")
}

func RegisterApplicationServer(s *grpc.Server, srv ApplicationServer) {
	s.RegisterService(&_Application_serviceDesc, srv)
}

func _Application_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).Apply(ctx, req.(*ApplicationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_ReadApplicationRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).ReadApplicationRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/ReadApplicationRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).ReadApplicationRequest(ctx, req.(*common.ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_UpdateApplicationRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).UpdateApplicationRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/UpdateApplicationRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).UpdateApplicationRequest(ctx, req.(*ApplicationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_DeleteApplicationRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).DeleteApplicationRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/DeleteApplicationRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).DeleteApplicationRequest(ctx, req.(*common.ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_ListApplicationRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).ListApplicationRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/ListApplicationRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).ListApplicationRequests(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_ReadApplicationResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).ReadApplicationResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/ReadApplicationResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).ReadApplicationResponse(ctx, req.(*common.ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_DeleteApplicationResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).DeleteApplicationResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/DeleteApplicationResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).DeleteApplicationResponse(ctx, req.(*common.ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Application_ListApplicationResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServer).ListApplicationResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Application/ListApplicationResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServer).ListApplicationResponse(ctx, req.(*common.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Application_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Application",
	HandlerType: (*ApplicationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _Application_Apply_Handler,
		},
		{
			MethodName: "ReadApplicationRequest",
			Handler:    _Application_ReadApplicationRequest_Handler,
		},
		{
			MethodName: "UpdateApplicationRequest",
			Handler:    _Application_UpdateApplicationRequest_Handler,
		},
		{
			MethodName: "DeleteApplicationRequest",
			Handler:    _Application_DeleteApplicationRequest_Handler,
		},
		{
			MethodName: "ListApplicationRequests",
			Handler:    _Application_ListApplicationRequests_Handler,
		},
		{
			MethodName: "ReadApplicationResponse",
			Handler:    _Application_ReadApplicationResponse_Handler,
		},
		{
			MethodName: "DeleteApplicationResponse",
			Handler:    _Application_DeleteApplicationResponse_Handler,
		},
		{
			MethodName: "ListApplicationResponse",
			Handler:    _Application_ListApplicationResponse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "application/application.proto",
}
